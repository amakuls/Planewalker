// Generated by CoffeeScript 1.6.3
(function() {
  var MainLoop, Player, gameCanvas, grafx, isDown, isLeft, isRight, isUp, player, spritesheet;

  gameCanvas = document.getElementById("game");

  grafx = gameCanvas.getContext('2d');

  spritesheet = new Image();

  spritesheet.src = "assets/images/spritesheet-1.png";

  spritesheet.srcX = 48;

  spritesheet.srcY = 0;

  spritesheet.width = 43;

  spritesheet.height = 58;

  Player = (function() {
    function Player(img, width, height) {
      this.Sprite = new Image();
      this.Sprite.src = img;
      this.width = width;
      this.height = height;
      this.Previous_X = 0;
      this.Previous_Y = 0;
      this.Velocity_X = 0;
      this.Velocity_Y = 0;
      this.speed = 2.5;
    }

    return Player;

  })();

  player = new Player("assets/images/player.png", 60, 82);

  $.get("/playerstats", function(data) {
    player.side = parseFloat(data.s);
    player.Y = parseFloat(data.y);
    player.X = parseFloat(data.x);
    return grafx.drawImage(spritesheet, spritesheet.srcX, spritesheet.srcY, spritesheet.width, spritesheet.height, player.X, player.Y, spritesheet.width, spritesheet.height);
  });

  isLeft = false;

  isRight = false;

  isUp = false;

  isDown = false;

  window.onkeydown = function(e) {
    if (e.keyCode === 65) {
      isLeft = true;
    }
    if (e.keyCode === 68) {
      isRight = true;
    }
    if (e.keyCode === 87) {
      isUp = true;
    }
    if (e.keyCode === 83) {
      return isDown = true;
    }
  };

  window.onkeyup = function(e) {
    if (e.keyCode === 65) {
      isLeft = false;
    }
    if (e.keyCode === 68) {
      isRight = false;
    }
    if (e.keyCode === 87) {
      isUp = false;
    }
    if (e.keyCode === 83) {
      return isDown = false;
    }
  };

  window.onbeforeunload = function() {
    return $.post("/playerstats", {
      x: player.X,
      y: player.Y,
      s: player.side
    });
  };

  window.onunload = function() {
    return $.post("/playerstats", {
      x: player.X,
      y: player.Y,
      s: player.side
    });
  };

  MainLoop = function() {
    gameCanvas.width = window.innerWidth;
    gameCanvas.height = window.innerHeight;
    if (isUp) {
      player.Velocity_Y = -player.speed;
      player.side = 2;
    }
    if (isDown) {
      player.Velocity_Y = player.speed;
      player.side = 1;
    }
    if (isLeft) {
      player.Velocity_X = -player.speed;
      player.side = 3;
    }
    if (isRight) {
      player.Velocity_X = player.speed;
      player.side = 4;
    }
    if (!isLeft && !isRight) {
      player.Velocity_X = 0;
    }
    if (!isUp && !isDown) {
      player.Velocity_Y = 0;
    }
    if (isUp && (isRight || isLeft)) {
      player.Velocity_Y = -(Math.sqrt(player.speed * player.speed * 2)) / 2;
    }
    if (isDown && (isRight || isLeft)) {
      player.Velocity_Y = (Math.sqrt(player.speed * player.speed * 2)) / 2;
    }
    if (isLeft && (isUp || isDown)) {
      player.Velocity_X = -(Math.sqrt(player.speed * player.speed * 2)) / 2;
    }
    if (isRight && (isUp || isDown)) {
      player.Velocity_X = (Math.sqrt(player.speed * player.speed * 2)) / 2;
    }
    if (player.side === 2) {
      spritesheet.srcX = 0;
      spritesheet.srcY = 65;
    }
    if (player.side === 1) {
      spritesheet.srcX = 46;
      spritesheet.srcY = 0;
    }
    if (player.side === 3) {
      spritesheet.srcX = 3;
      spritesheet.srcY = 4;
    }
    if (player.side === 4) {
      spritesheet.srcX = 46;
      spritesheet.srcY = 65;
    }
    player.X += player.Velocity_X;
    player.Y += player.Velocity_Y;
    grafx.clearRect(0, 0, gameCanvas.width, gameCanvas.height);
    grafx.drawImage(spritesheet, spritesheet.srcX, spritesheet.srcY, spritesheet.width, spritesheet.height, player.X, player.Y, spritesheet.width, spritesheet.height);
    return requestAnimationFrame(MainLoop);
  };

  MainLoop();

}).call(this);

/*
//@ sourceMappingURL=game.map
*/
